---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Layout from '../layouts/Layout.astro';
import SideNav from '../components/SideNav.astro';
import { noticias } from '../data/noticias';

// Configuración de paginación
const noticiasPorPagina = 6;

  // Obtener categorías únicas
  const categorias = [...new Set(noticias.map(noticia => noticia.categoria))];
---

<Layout>
  <Header />
  <SideNav sections={[]} />
  
  <!-- Sección de Noticias -->
  <main class="min-h-screen w-full">
    <!-- Header de la página -->
    <div class="max-w-[100vw] h-[60vh] w-full relative flex items-center justify-center z-2">
      <video
        class="absolute inset-0 w-full h-full object-cover z-0"
        src="/assets/Video_Noticias_Spika_Tech.mp4"
        autoplay
        loop
        muted
        playsinline
      ></video>
    </div>
    <div class="w-full flex flex-col gap-[5vh] py-[5vh] px-[10vw]">
      <!-- Header de las noticias -->
      <div class="flex justify-between items-center border-b-2 border-[#003035] pb-4">
        <h1 class="text-3xl font-bold text-[#003035]" data-i18n="Noticias.todasNoticias"></h1>
        
        <!-- Filtro de categorías -->
        <div class="relative">
          <button 
            id="categoriasDropdown"
            class="flex items-center space-x-3 px-6 py-3 bg-white border-2 border-[#003035] rounded-xl shadow-lg hover:shadow-xl hover:border-[#CEDF00] hover:cursor-pointer"
          >
            <span class="text-[#003035] font-semibold" data-i18n="Noticias.categorias"></span>
            <svg class="w-5 h-5 text-[#003035] transform transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </button>
          
          <!-- Dropdown de categorías -->
          <div 
            id="categoriasMenu"
            class="hidden absolute right-0 mt-3 w-56 bg-white border-2 border-[#003035] rounded-xl shadow-2xl z-10 backdrop-blur-sm"
          >
            <div>
              <button 
                class="categoria-btn w-full text-left px-6 py-3 text-sm text-[#003035] hover:cursor-pointer hover:text-[#CEDF00] transition-all duration-200 relative group"
                data-categoria="todas"
              >
                <span class="relative z-10" data-i18n="Noticias.todasCategorias"></span>
                <span class="absolute inset-0 bg-[#003035] opacity-0 group-hover:opacity-100 transition-opacity duration-200"></span>
              </button>
              {categorias.map(categoria => (
                <button 
                  class="categoria-btn w-full text-left px-6 py-3 text-sm text-[#003035] hover:cursor-pointer hover:text-[#CEDF00] transition-all duration-200 relative group"
                  data-categoria={categoria}
                >
                  <span class="relative z-10">{categoria}</span>
                  <span class="absolute inset-0 bg-[#003035] opacity-0 group-hover:opacity-100 transition-opacity duration-200"></span>
                </button>
              ))}
            </div>
          </div>
        </div>
      </div>

      <!-- Grid de noticias -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="noticiasGrid">
        <!-- Las noticias se renderizarán dinámicamente -->
      </div>

      <!-- Paginación -->
      <div class="flex justify-center items-center space-x-2 mt-8" id="paginacion" style="display: none;">
        <!-- Botón Anterior -->
        <button 
          id="btnAnterior"
          class="px-4 py-2 text-sm font-medium text-[#003035] bg-white border border-[#003035] rounded-lg hover:bg-[#003035] hover:cursor-pointer hover:text-white transition-colors duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
          disabled
          data-i18n="Noticias.anterior"
        >
        </button>
        
        <!-- Números de página -->
        <div class="flex space-x-1" id="numerosPagina">
          <!-- Los números se generarán dinámicamente -->
        </div>
        
        <!-- Botón Siguiente -->
        <button 
          id="btnSiguiente"
          class="px-4 py-2 text-sm font-medium text-[#003035] bg-white border border-[#003035] rounded-lg hover:bg-[#003035] hover:cursor-pointer hover:text-white transition-colors duration-300"
          data-i18n="Noticias.siguiente"
          >
          
        </button>
      </div>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes slideOutDown {
    from {
      opacity: 1;
      transform: translateY(0);
    }
    to {
      opacity: 0;
      transform: translateY(30px);
    }
  }

  /* Efectos de cursor personalizados */
  .noticia-card {
    cursor: pointer;
  }

  /* Efectos de transición suaves */
  * {
    transition-property: all;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Efecto de brillo en hover para las imágenes */
  .noticia-card:hover img {
    filter: brightness(1.1) contrast(1.05);
  }

  /* Animación del subrayado */
  .noticia-card h3 span {
    transition: width 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }
</style>

<script>
  // Importar datos desde el archivo centralizado
  import { noticias } from '../data/noticias';

  // Configuración de paginación
  const noticiasPorPagina = 6;
  let paginaActual = 1;
  let noticiasFiltradas = [...noticias].sort((a, b) => {
    return new Date(b.fecha).getTime() - new Date(a.fecha).getTime();
  });

  // Funcionalidad del filtro de categorías y paginación
  document.addEventListener('DOMContentLoaded', function() {
    const dropdownBtn : any = document.getElementById('categoriasDropdown');
    const categoriasMenu : any = document.getElementById('categoriasMenu');
    const noticiasGrid : any = document.getElementById('noticiasGrid');
    const dropdownIcon : any = dropdownBtn.querySelector('svg');
    const btnAnterior : any = document.getElementById('btnAnterior');
    const btnSiguiente : any = document.getElementById('btnSiguiente');
    const numerosPagina : any = document.getElementById('numerosPagina');

    // Toggle del dropdown con animación del icono
    dropdownBtn.addEventListener('click', function() {
      categoriasMenu.classList.toggle('hidden');
      dropdownIcon.classList.toggle('rotate-180');
    });

    // Cerrar dropdown al hacer clic fuera
    document.addEventListener('click', function(event) {
      if (!dropdownBtn.contains(event.target) && !categoriasMenu.contains(event.target)) {
        categoriasMenu.classList.add('hidden');
        dropdownIcon.classList.remove('rotate-180');
      }
    });

    // Event listener para filtros de categorías
    document.addEventListener('click', function(event) {
      const target = event.target as Element;
      
      // Buscar el botón de categoría (puede ser el elemento clickeado o un padre)
      let categoriaBtn = target;
      while (categoriaBtn && !categoriaBtn.classList.contains('categoria-btn')) {
        categoriaBtn = categoriaBtn.parentElement as Element;
        if (!categoriaBtn) break;
      }
      
      if (categoriaBtn && categoriaBtn.classList.contains('categoria-btn')) {
        const categoria = categoriaBtn.getAttribute('data-categoria');
        
        if (categoria === 'todas') {
          noticiasFiltradas = [...noticias];
        } else {
          noticiasFiltradas = noticias.filter(noticia => noticia.categoria === categoria);
        }
        
        // Ordenar por fecha (más recientes primero)
        noticiasFiltradas.sort((a, b) => {
          return new Date(b.fecha).getTime() - new Date(a.fecha).getTime();
        });
        
        paginaActual = 1;
        renderizarNoticias();
        
        // Cerrar dropdown
        categoriasMenu.classList.add('hidden');
        dropdownIcon.classList.remove('rotate-180');
      }
    });

    // Event listeners para paginación
    btnAnterior.addEventListener('click', function() {
      if (paginaActual > 1) {
        paginaActual--;
        renderizarNoticias();
      }
    });

    btnSiguiente.addEventListener('click', function() {
      const totalPaginas = Math.ceil(noticiasFiltradas.length / noticiasPorPagina);
      if (paginaActual < totalPaginas) {
        paginaActual++;
        renderizarNoticias();
      }
    });

    // Función para renderizar noticias
    function renderizarNoticias() {
      // Ordenar noticias por fecha (más recientes primero)
      const noticiasOrdenadas = [...noticiasFiltradas].sort((a, b) => {
        return new Date(b.fecha).getTime() - new Date(a.fecha).getTime();
      });
      
      const inicio = (paginaActual - 1) * noticiasPorPagina;
      const fin = inicio + noticiasPorPagina;
      const noticiasAMostrar = noticiasOrdenadas.slice(inicio, fin);

      noticiasGrid.innerHTML = '';

      noticiasAMostrar.forEach((noticia, index) => {
        const article = document.createElement('article');
        article.className = 'noticia-card group bg-white overflow-hidden cursor-pointer';
        article.setAttribute('data-categoria', noticia.categoria);
        article.style.animation = `slideInUp 0.5s ease-out ${index * 0.1}s both`;

        article.innerHTML = `
          <div class="relative overflow-hidden">
            <div class="aspect-w-16 aspect-h-9 bg-gray-200">
              <img 
                src="${noticia.imagen}" 
                alt="${noticia.titulo}"
                class="w-full h-48 object-cover transition-transform duration-700 group-hover:scale-110"
                loading="lazy"
              />
            </div>
            <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
          </div>
          
          <div class="flex flex-col gap-4 aling-center mt-4">
            <h3 class="text-lg font-semibold text-[#003035] line-clamp-2 relative">
              <span class="bg-[linear-gradient(to_bottom,#003035,#003035)] 
                          bg-[length:0%_2px] bg-no-repeat 
                          [background-position:0_100%]
                          transition-[background-size] duration-1000 linear hover:bg-[length:100%_2px]">
                ${noticia.titulo}
              </span>
            </h3>
            <p class="text-[#003035] text-sm line-clamp-3">
              ${noticia.descripcion}
            </p>
            
            <div class="flex items-center justify-between">
              <span class="text-xs text-gray-500 group-hover:text-gray-600 transition-colors duration-300">${noticia.fecha}</span>
              
              <!-- Flecha amarilla que aparece al hacer hover -->
              <div class="opacity-0 group-hover:opacity-100 transition-all duration-300 group-hover:translate-x-0 translate-x-2">
                <svg class="w-7 h-7 text-[#003035]" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                </svg>
              </div>
            </div>
          </div>
        `;

        // Hacer que toda la tarjeta sea clickeable
        article.addEventListener('click', () => {
          // Guardar la noticia en localStorage como respaldo
          localStorage.setItem('noticiaActual', JSON.stringify(noticia));
          // Navegar a la noticia con parámetro de URL
          window.location.href = `/noticia?id=${noticia.id}`;
        });

        noticiasGrid.appendChild(article);
      });

      actualizarPaginacion();
    }

    // Función para actualizar la paginación
    function actualizarPaginacion() {
      const totalPaginas = Math.ceil(noticiasFiltradas.length / noticiasPorPagina);
      const paginacion : any = document.getElementById('paginacion');

      if (totalPaginas <= 1) {
        paginacion.style.display = 'none';
        return;
      }

      paginacion.style.display = 'flex';

      // Actualizar botones anterior/siguiente
      btnAnterior.disabled = paginaActual === 1;
      btnSiguiente.disabled = paginaActual === totalPaginas;

      // Actualizar números de página
      numerosPagina.innerHTML = '';

      // Lógica para mostrar máximo 3 números
      if (totalPaginas <= 3) {
        // Si hay 3 o menos páginas, mostrar todas
        for (let i = 1; i <= totalPaginas; i++) {
          numerosPagina.appendChild(crearBotonPagina(i, i === paginaActual));
        }
      } else {
        // Si hay más de 3 páginas, mostrar exactamente 3 números que se mueven
        let inicio, fin;
        
        if (paginaActual <= 2) {
          // En las primeras páginas: mostrar 1, 2, 3
          inicio = 1;
          fin = 3;
        } else if (paginaActual >= totalPaginas - 1) {
          // En las últimas páginas: mostrar penúltima, última, y una antes
          inicio = totalPaginas - 2;
          fin = totalPaginas;
        } else {
          // En páginas del medio: mostrar actual, anterior y siguiente
          inicio = paginaActual - 1;
          fin = paginaActual + 1;
        }
        
        // Agregar primera página si no está incluida
        if (inicio > 1) {
          numerosPagina.appendChild(crearBotonPagina(1, false));
          numerosPagina.appendChild(crearPuntosSuspensivos());
        }
        
        // Agregar los 3 números principales
        for (let i = inicio; i <= fin; i++) {
          numerosPagina.appendChild(crearBotonPagina(i, i === paginaActual));
        }
        
        // Agregar última página si no está incluida
        if (fin < totalPaginas) {
          numerosPagina.appendChild(crearPuntosSuspensivos());
          numerosPagina.appendChild(crearBotonPagina(totalPaginas, false));
        }
      }
    }

    // Función para crear botones de página
    function crearBotonPagina(numero : any, esActual : any) {
      const btn = document.createElement('button');
      btn.className = `px-4 py-2 text-sm font-medium ${
        esActual 
          ? 'text-white bg-[#003035]' 
          : 'text-[#003035] bg-white border border-[#003035] hover:bg-[#003035] hover:text-white hover:cursor-pointer'
      } rounded-lg transition-colors duration-300`;
      btn.textContent = numero;
      btn.setAttribute('data-pagina', numero);
      btn.addEventListener('click', () => {
        paginaActual = numero;
        renderizarNoticias();
      });
      return btn;
    }

    // Función para crear puntos suspensivos
    function crearPuntosSuspensivos() {
      const puntos = document.createElement('span');
      puntos.className = 'px-2 text-sm text-gray-500';
      puntos.textContent = '...';
      return puntos;
    }

    // Event listener específico para botones de categoría (después de que el DOM esté listo)
    setTimeout(() => {
      const categoriaBtns = document.querySelectorAll('.categoria-btn');
      
      categoriaBtns.forEach(btn => {
        btn.addEventListener('click', function(e) {
          e.preventDefault();
          e.stopPropagation();
          
          const categoria = this.getAttribute('data-categoria');
          
          if (categoria === 'todas') {
            noticiasFiltradas = [...noticias];
          } else {
            noticiasFiltradas = noticias.filter(noticia => noticia.categoria === categoria);
          }
          
          // Ordenar por fecha (más recientes primero)
          noticiasFiltradas.sort((a, b) => {
            return new Date(b.fecha).getTime() - new Date(a.fecha).getTime();
          });
          
          paginaActual = 1;
          renderizarNoticias();
          
          // Cerrar dropdown
          categoriasMenu.classList.add('hidden');
          dropdownIcon.classList.remove('rotate-180');
        });
      });
    }, 100);

    // Inicializar
    renderizarNoticias();
  });
</script>